within ServoWing.Loads.Components;
function C_BADEGHJFunR "七维插值算法"
  extends Modelica.Icons.Function;
    //第一列B,第二列A,第三列D,第四列E，第五列G，第六列H，第七列J
  input Real B "插值表第一列";
  input Real A "插值表第二列";
  input Real D "插值表第三列";
  input Real E "插值表第四列";
  input Real G "插值表第五列";
  input Real H "插值表第六列";
  input Real J "插值表第七列";
  output Real y[n - 7] "输出n-7列";
  //插值表特征参数
  parameter Integer Nb = 5 "B取值个数";
  parameter Real table_B[Nb] = {40, 50, 60, 70, 80} "B特征取值，等差数列";
  parameter Integer Na = 3 "A取值个数";
  parameter Real table_A[Na] = {15, 20, 25} "A特征取值，等差数列";
  parameter Integer Nd = 9 "D取值个数";
  parameter Real table_D[Nd] = {-20, -15, -10, -5, 0, 5, 10, 15, 20} "D特征取值，等差数列";
  parameter Integer Ne = 5 "E取值个数";
  parameter Real table_E[Ne] = {-10, -5, 0, 5, 10} "E特征取值，等差数列";
  parameter Integer Ng = 7 "G取值个数";
  parameter Real table_G[Ng] = {-18, -12, -6, 0, 6, 12, 18} "G特征取值，等差数列";
  parameter Integer Nh = 7 "H取值个数";
  parameter Real table_H[Nh] = {-6, -4, -2, 0, 2, 4, 6} "H特征取值，等差数列";
  parameter Integer Nj = 7 "H取值个数";
  parameter Real table_J[Nj] = {-9, -6, -3, 0, 3, 6, 9} "J特征取值，等差数列";
  parameter Integer n = 13 "插值表列数";
  //
protected 
  Integer Na1(start = 1) "A的左下标";
  Integer Na2(start = 1) "A的右下标";
  Integer Nb1(start = 1) "B的左下标";
  Integer Nb2(start = 1) "B的右下标";
  Integer Nd1(start = 1) "D的左下标";
  Integer Nd2(start = 1) "D的右下标";
  Integer Ne1(start = 1) "E的左下标";
  Integer Ne2(start = 1) "E的右下标";
  Integer Ng1(start = 1) "G的左下标";
  Integer Ng2(start = 1) "G的右下标";
  Integer Nh1(start = 1) "H的左下标";
  Integer Nh2(start = 1) "H的右下标";
  Integer Nj1(start = 1) "H的左下标";
  Integer Nj2(start = 1) "H的右下标";
    //
  Integer Nb1a1d1e1g1h1j1;
  Integer Nb1a1d1e1g1h1j2;
  Integer Nb1a1d1e1g1h2j1;
  Integer Nb1a1d1e1g1h2j2;
  Integer Nb1a1d1e1g2h1j1;
  Integer Nb1a1d1e1g2h1j2;
  Integer Nb1a1d1e1g2h2j1;
  Integer Nb1a1d1e1g2h2j2;
  Integer Nb1a1d1e2g1h1j1;
  Integer Nb1a1d1e2g1h1j2;
  Integer Nb1a1d1e2g1h2j1;
  Integer Nb1a1d1e2g1h2j2;
  Integer Nb1a1d1e2g2h1j1;
  Integer Nb1a1d1e2g2h1j2;
  Integer Nb1a1d1e2g2h2j1;
  Integer Nb1a1d1e2g2h2j2;
  Integer Nb1a1d2e1g1h1j1;
  Integer Nb1a1d2e1g1h1j2;
  Integer Nb1a1d2e1g1h2j1;
  Integer Nb1a1d2e1g1h2j2;
  Integer Nb1a1d2e1g2h1j1;
  Integer Nb1a1d2e1g2h1j2;
  Integer Nb1a1d2e1g2h2j1;
  Integer Nb1a1d2e1g2h2j2;
  Integer Nb1a1d2e2g1h1j1;
  Integer Nb1a1d2e2g1h1j2;
  Integer Nb1a1d2e2g1h2j1;
  Integer Nb1a1d2e2g1h2j2;
  Integer Nb1a1d2e2g2h1j1;
  Integer Nb1a1d2e2g2h1j2;
  Integer Nb1a1d2e2g2h2j1;
  Integer Nb1a1d2e2g2h2j2;
  Integer Nb1a2d1e1g1h1j1;
  Integer Nb1a2d1e1g1h1j2;
  Integer Nb1a2d1e1g1h2j1;
  Integer Nb1a2d1e1g1h2j2;
  Integer Nb1a2d1e1g2h1j1;
  Integer Nb1a2d1e1g2h1j2;
  Integer Nb1a2d1e1g2h2j1;
  Integer Nb1a2d1e1g2h2j2;
  Integer Nb1a2d1e2g1h1j1;
  Integer Nb1a2d1e2g1h1j2;
  Integer Nb1a2d1e2g1h2j1;
  Integer Nb1a2d1e2g1h2j2;
  Integer Nb1a2d1e2g2h1j1;
  Integer Nb1a2d1e2g2h1j2;
  Integer Nb1a2d1e2g2h2j1;
  Integer Nb1a2d1e2g2h2j2;
  Integer Nb1a2d2e1g1h1j1;
  Integer Nb1a2d2e1g1h1j2;
  Integer Nb1a2d2e1g1h2j1;
  Integer Nb1a2d2e1g1h2j2;
  Integer Nb1a2d2e1g2h1j1;
  Integer Nb1a2d2e1g2h1j2;
  Integer Nb1a2d2e1g2h2j1;
  Integer Nb1a2d2e1g2h2j2;
  Integer Nb1a2d2e2g1h1j1;
  Integer Nb1a2d2e2g1h1j2;
  Integer Nb1a2d2e2g1h2j1;
  Integer Nb1a2d2e2g1h2j2;
  Integer Nb1a2d2e2g2h1j1;
  Integer Nb1a2d2e2g2h1j2;
  Integer Nb1a2d2e2g2h2j1;
  Integer Nb1a2d2e2g2h2j2;
  //
  Integer Nb2a1d1e1g1h1j1;
  Integer Nb2a1d1e1g1h1j2;
  Integer Nb2a1d1e1g1h2j1;
  Integer Nb2a1d1e1g1h2j2;
  Integer Nb2a1d1e1g2h1j1;
  Integer Nb2a1d1e1g2h1j2;
  Integer Nb2a1d1e1g2h2j1;
  Integer Nb2a1d1e1g2h2j2;
  Integer Nb2a1d1e2g1h1j1;
  Integer Nb2a1d1e2g1h1j2;
  Integer Nb2a1d1e2g1h2j1;
  Integer Nb2a1d1e2g1h2j2;
  Integer Nb2a1d1e2g2h1j1;
  Integer Nb2a1d1e2g2h1j2;
  Integer Nb2a1d1e2g2h2j1;
  Integer Nb2a1d1e2g2h2j2;
  Integer Nb2a1d2e1g1h1j1;
  Integer Nb2a1d2e1g1h1j2;
  Integer Nb2a1d2e1g1h2j1;
  Integer Nb2a1d2e1g1h2j2;
  Integer Nb2a1d2e1g2h1j1;
  Integer Nb2a1d2e1g2h1j2;
  Integer Nb2a1d2e1g2h2j1;
  Integer Nb2a1d2e1g2h2j2;
  Integer Nb2a1d2e2g1h1j1;
  Integer Nb2a1d2e2g1h1j2;
  Integer Nb2a1d2e2g1h2j1;
  Integer Nb2a1d2e2g1h2j2;
  Integer Nb2a1d2e2g2h1j1;
  Integer Nb2a1d2e2g2h1j2;
  Integer Nb2a1d2e2g2h2j1;
  Integer Nb2a1d2e2g2h2j2;
  Integer Nb2a2d1e1g1h1j1;
  Integer Nb2a2d1e1g1h1j2;
  Integer Nb2a2d1e1g1h2j1;
  Integer Nb2a2d1e1g1h2j2;
  Integer Nb2a2d1e1g2h1j1;
  Integer Nb2a2d1e1g2h1j2;
  Integer Nb2a2d1e1g2h2j1;
  Integer Nb2a2d1e1g2h2j2;
  Integer Nb2a2d1e2g1h1j1;
  Integer Nb2a2d1e2g1h1j2;
  Integer Nb2a2d1e2g1h2j1;
  Integer Nb2a2d1e2g1h2j2;
  Integer Nb2a2d1e2g2h1j1;
  Integer Nb2a2d1e2g2h1j2;
  Integer Nb2a2d1e2g2h2j1;
  Integer Nb2a2d1e2g2h2j2;
  Integer Nb2a2d2e1g1h1j1;
  Integer Nb2a2d2e1g1h1j2;
  Integer Nb2a2d2e1g1h2j1;
  Integer Nb2a2d2e1g1h2j2;
  Integer Nb2a2d2e1g2h1j1;
  Integer Nb2a2d2e1g2h1j2;
  Integer Nb2a2d2e1g2h2j1;
  Integer Nb2a2d2e1g2h2j2;
  Integer Nb2a2d2e2g1h1j1;
  Integer Nb2a2d2e2g1h1j2;
  Integer Nb2a2d2e2g1h2j1;
  Integer Nb2a2d2e2g1h2j2;
  Integer Nb2a2d2e2g2h1j1;
  Integer Nb2a2d2e2g2h1j2;
  Integer Nb2a2d2e2g2h2j1;
  Integer Nb2a2d2e2g2h2j2;
   //
  Real Fb1a1d1e1g1h1j1[n - 7];
  Real Fb1a1d1e1g1h1j2[n - 7];
  Real Fb1a1d1e1g1h2j1[n - 7];
  Real Fb1a1d1e1g1h2j2[n - 7];
  Real Fb1a1d1e1g2h1j1[n - 7];
  Real Fb1a1d1e1g2h1j2[n - 7];
  Real Fb1a1d1e1g2h2j1[n - 7];
  Real Fb1a1d1e1g2h2j2[n - 7];
  Real Fb1a1d1e2g1h1j1[n - 7];
  Real Fb1a1d1e2g1h1j2[n - 7];
  Real Fb1a1d1e2g1h2j1[n - 7];
  Real Fb1a1d1e2g1h2j2[n - 7];
  Real Fb1a1d1e2g2h1j1[n - 7];
  Real Fb1a1d1e2g2h1j2[n - 7];
  Real Fb1a1d1e2g2h2j1[n - 7];
  Real Fb1a1d1e2g2h2j2[n - 7];
  Real Fb1a1d2e1g1h1j1[n - 7];
  Real Fb1a1d2e1g1h1j2[n - 7];
  Real Fb1a1d2e1g1h2j1[n - 7];
  Real Fb1a1d2e1g1h2j2[n - 7];
  Real Fb1a1d2e1g2h1j1[n - 7];
  Real Fb1a1d2e1g2h1j2[n - 7];
  Real Fb1a1d2e1g2h2j1[n - 7];
  Real Fb1a1d2e1g2h2j2[n - 7];
  Real Fb1a1d2e2g1h1j1[n - 7];
  Real Fb1a1d2e2g1h1j2[n - 7];
  Real Fb1a1d2e2g1h2j1[n - 7];
  Real Fb1a1d2e2g1h2j2[n - 7];
  Real Fb1a1d2e2g2h1j1[n - 7];
  Real Fb1a1d2e2g2h1j2[n - 7];
  Real Fb1a1d2e2g2h2j1[n - 7];
  Real Fb1a1d2e2g2h2j2[n - 7];
  Real Fb1a2d1e1g1h1j1[n - 7];
  Real Fb1a2d1e1g1h1j2[n - 7];
  Real Fb1a2d1e1g1h2j1[n - 7];
  Real Fb1a2d1e1g1h2j2[n - 7];
  Real Fb1a2d1e1g2h1j1[n - 7];
  Real Fb1a2d1e1g2h1j2[n - 7];
  Real Fb1a2d1e1g2h2j1[n - 7];
  Real Fb1a2d1e1g2h2j2[n - 7];
  Real Fb1a2d1e2g1h1j1[n - 7];
  Real Fb1a2d1e2g1h1j2[n - 7];
  Real Fb1a2d1e2g1h2j1[n - 7];
  Real Fb1a2d1e2g1h2j2[n - 7];
  Real Fb1a2d1e2g2h1j1[n - 7];
  Real Fb1a2d1e2g2h1j2[n - 7];
  Real Fb1a2d1e2g2h2j1[n - 7];
  Real Fb1a2d1e2g2h2j2[n - 7];
  Real Fb1a2d2e1g1h1j1[n - 7];
  Real Fb1a2d2e1g1h1j2[n - 7];
  Real Fb1a2d2e1g1h2j1[n - 7];
  Real Fb1a2d2e1g1h2j2[n - 7];
  Real Fb1a2d2e1g2h1j1[n - 7];
  Real Fb1a2d2e1g2h1j2[n - 7];
  Real Fb1a2d2e1g2h2j1[n - 7];
  Real Fb1a2d2e1g2h2j2[n - 7];
  Real Fb1a2d2e2g1h1j1[n - 7];
  Real Fb1a2d2e2g1h1j2[n - 7];
  Real Fb1a2d2e2g1h2j1[n - 7];
  Real Fb1a2d2e2g1h2j2[n - 7];
  Real Fb1a2d2e2g2h1j1[n - 7];
  Real Fb1a2d2e2g2h1j2[n - 7];
  Real Fb1a2d2e2g2h2j1[n - 7];
  Real Fb1a2d2e2g2h2j2[n - 7];
  //
  Real Fb2a1d1e1g1h1j1[n - 7];
  Real Fb2a1d1e1g1h1j2[n - 7];
  Real Fb2a1d1e1g1h2j1[n - 7];
  Real Fb2a1d1e1g1h2j2[n - 7];
  Real Fb2a1d1e1g2h1j1[n - 7];
  Real Fb2a1d1e1g2h1j2[n - 7];
  Real Fb2a1d1e1g2h2j1[n - 7];
  Real Fb2a1d1e1g2h2j2[n - 7];
  Real Fb2a1d1e2g1h1j1[n - 7];
  Real Fb2a1d1e2g1h1j2[n - 7];
  Real Fb2a1d1e2g1h2j1[n - 7];
  Real Fb2a1d1e2g1h2j2[n - 7];
  Real Fb2a1d1e2g2h1j1[n - 7];
  Real Fb2a1d1e2g2h1j2[n - 7];
  Real Fb2a1d1e2g2h2j1[n - 7];
  Real Fb2a1d1e2g2h2j2[n - 7];
  Real Fb2a1d2e1g1h1j1[n - 7];
  Real Fb2a1d2e1g1h1j2[n - 7];
  Real Fb2a1d2e1g1h2j1[n - 7];
  Real Fb2a1d2e1g1h2j2[n - 7];
  Real Fb2a1d2e1g2h1j1[n - 7];
  Real Fb2a1d2e1g2h1j2[n - 7];
  Real Fb2a1d2e1g2h2j1[n - 7];
  Real Fb2a1d2e1g2h2j2[n - 7];
  Real Fb2a1d2e2g1h1j1[n - 7];
  Real Fb2a1d2e2g1h1j2[n - 7];
  Real Fb2a1d2e2g1h2j1[n - 7];
  Real Fb2a1d2e2g1h2j2[n - 7];
  Real Fb2a1d2e2g2h1j1[n - 7];
  Real Fb2a1d2e2g2h1j2[n - 7];
  Real Fb2a1d2e2g2h2j1[n - 7];
  Real Fb2a1d2e2g2h2j2[n - 7];
  Real Fb2a2d1e1g1h1j1[n - 7];
  Real Fb2a2d1e1g1h1j2[n - 7];
  Real Fb2a2d1e1g1h2j1[n - 7];
  Real Fb2a2d1e1g1h2j2[n - 7];
  Real Fb2a2d1e1g2h1j1[n - 7];
  Real Fb2a2d1e1g2h1j2[n - 7];
  Real Fb2a2d1e1g2h2j1[n - 7];
  Real Fb2a2d1e1g2h2j2[n - 7];
  Real Fb2a2d1e2g1h1j1[n - 7];
  Real Fb2a2d1e2g1h1j2[n - 7];
  Real Fb2a2d1e2g1h2j1[n - 7];
  Real Fb2a2d1e2g1h2j2[n - 7];
  Real Fb2a2d1e2g2h1j1[n - 7];
  Real Fb2a2d1e2g2h1j2[n - 7];
  Real Fb2a2d1e2g2h2j1[n - 7];
  Real Fb2a2d1e2g2h2j2[n - 7];
  Real Fb2a2d2e1g1h1j1[n - 7];
  Real Fb2a2d2e1g1h1j2[n - 7];
  Real Fb2a2d2e1g1h2j1[n - 7];
  Real Fb2a2d2e1g1h2j2[n - 7];
  Real Fb2a2d2e1g2h1j1[n - 7];
  Real Fb2a2d2e1g2h1j2[n - 7];
  Real Fb2a2d2e1g2h2j1[n - 7];
  Real Fb2a2d2e1g2h2j2[n - 7];
  Real Fb2a2d2e2g1h1j1[n - 7];
  Real Fb2a2d2e2g1h1j2[n - 7];
  Real Fb2a2d2e2g1h2j1[n - 7];
  Real Fb2a2d2e2g1h2j2[n - 7];
  Real Fb2a2d2e2g2h1j1[n - 7];
  Real Fb2a2d2e2g2h1j2[n - 7];
  Real Fb2a2d2e2g2h2j1[n - 7];
  Real Fb2a2d2e2g2h2j2[n - 7];
   //
  Real Fb1a1d1e1g1h1[n - 7];
  Real Fb1a1d1e1g1h2[n - 7];
  Real Fb1a1d1e1g2h1[n - 7];
  Real Fb1a1d1e1g2h2[n - 7];
  Real Fb1a1d1e2g1h1[n - 7];
  Real Fb1a1d1e2g1h2[n - 7];
  Real Fb1a1d1e2g2h1[n - 7];
  Real Fb1a1d1e2g2h2[n - 7];
  Real Fb1a1d2e1g1h1[n - 7];
  Real Fb1a1d2e1g1h2[n - 7];
  Real Fb1a1d2e1g2h1[n - 7];
  Real Fb1a1d2e1g2h2[n - 7];
  Real Fb1a1d2e2g1h1[n - 7];
  Real Fb1a1d2e2g1h2[n - 7];
  Real Fb1a1d2e2g2h1[n - 7];
  Real Fb1a1d2e2g2h2[n - 7];
  Real Fb1a2d1e1g1h1[n - 7];
  Real Fb1a2d1e1g1h2[n - 7];
  Real Fb1a2d1e1g2h1[n - 7];
  Real Fb1a2d1e1g2h2[n - 7];
  Real Fb1a2d1e2g1h1[n - 7];
  Real Fb1a2d1e2g1h2[n - 7];
  Real Fb1a2d1e2g2h1[n - 7];
  Real Fb1a2d1e2g2h2[n - 7];
  Real Fb1a2d2e1g1h1[n - 7];
  Real Fb1a2d2e1g1h2[n - 7];
  Real Fb1a2d2e1g2h1[n - 7];
  Real Fb1a2d2e1g2h2[n - 7];
  Real Fb1a2d2e2g1h1[n - 7];
  Real Fb1a2d2e2g1h2[n - 7];
  Real Fb1a2d2e2g2h1[n - 7];
  Real Fb1a2d2e2g2h2[n - 7];
      //
  Real Fb2a1d1e1g1h1[n - 7];
  Real Fb2a1d1e1g1h2[n - 7];
  Real Fb2a1d1e1g2h1[n - 7];
  Real Fb2a1d1e1g2h2[n - 7];
  Real Fb2a1d1e2g1h1[n - 7];
  Real Fb2a1d1e2g1h2[n - 7];
  Real Fb2a1d1e2g2h1[n - 7];
  Real Fb2a1d1e2g2h2[n - 7];
  Real Fb2a1d2e1g1h1[n - 7];
  Real Fb2a1d2e1g1h2[n - 7];
  Real Fb2a1d2e1g2h1[n - 7];
  Real Fb2a1d2e1g2h2[n - 7];
  Real Fb2a1d2e2g1h1[n - 7];
  Real Fb2a1d2e2g1h2[n - 7];
  Real Fb2a1d2e2g2h1[n - 7];
  Real Fb2a1d2e2g2h2[n - 7];
  Real Fb2a2d1e1g1h1[n - 7];
  Real Fb2a2d1e1g1h2[n - 7];
  Real Fb2a2d1e1g2h1[n - 7];
  Real Fb2a2d1e1g2h2[n - 7];
  Real Fb2a2d1e2g1h1[n - 7];
  Real Fb2a2d1e2g1h2[n - 7];
  Real Fb2a2d1e2g2h1[n - 7];
  Real Fb2a2d1e2g2h2[n - 7];
  Real Fb2a2d2e1g1h1[n - 7];
  Real Fb2a2d2e1g1h2[n - 7];
  Real Fb2a2d2e1g2h1[n - 7];
  Real Fb2a2d2e1g2h2[n - 7];
  Real Fb2a2d2e2g1h1[n - 7];
  Real Fb2a2d2e2g1h2[n - 7];
  Real Fb2a2d2e2g2h1[n - 7];
  Real Fb2a2d2e2g2h2[n - 7];
    //
  Real Fb1a1d1e1g1[n - 7];
  Real Fb1a1d1e1g2[n - 7];
  Real Fb1a1d1e2g1[n - 7];
  Real Fb1a1d1e2g2[n - 7];
  Real Fb1a1d2e1g1[n - 7];
  Real Fb1a1d2e1g2[n - 7];
  Real Fb1a1d2e2g1[n - 7];
  Real Fb1a1d2e2g2[n - 7];
  Real Fb1a2d1e1g1[n - 7];
  Real Fb1a2d1e1g2[n - 7];
  Real Fb1a2d1e2g1[n - 7];
  Real Fb1a2d1e2g2[n - 7];
  Real Fb1a2d2e1g1[n - 7];
  Real Fb1a2d2e1g2[n - 7];
  Real Fb1a2d2e2g1[n - 7];
  Real Fb1a2d2e2g2[n - 7];
  //
  Real Fb2a1d1e1g1[n - 7];
  Real Fb2a1d1e1g2[n - 7];
  Real Fb2a1d1e2g1[n - 7];
  Real Fb2a1d1e2g2[n - 7];
  Real Fb2a1d2e1g1[n - 7];
  Real Fb2a1d2e1g2[n - 7];
  Real Fb2a1d2e2g1[n - 7];
  Real Fb2a1d2e2g2[n - 7];
  Real Fb2a2d1e1g1[n - 7];
  Real Fb2a2d1e1g2[n - 7];
  Real Fb2a2d1e2g1[n - 7];
  Real Fb2a2d1e2g2[n - 7];
  Real Fb2a2d2e1g1[n - 7];
  Real Fb2a2d2e1g2[n - 7];
  Real Fb2a2d2e2g1[n - 7];
  Real Fb2a2d2e2g2[n - 7];
  //
  Real Fb1a1d1e1[n - 7];
  Real Fb1a1d1e2[n - 7];
  Real Fb1a1d2e1[n - 7];
  Real Fb1a1d2e2[n - 7];
  Real Fb1a2d1e1[n - 7];
  Real Fb1a2d1e2[n - 7];
  Real Fb1a2d2e1[n - 7];
  Real Fb1a2d2e2[n - 7];
  //
  Real Fb2a1d1e1[n - 7];
  Real Fb2a1d1e2[n - 7];
  Real Fb2a1d2e1[n - 7];
  Real Fb2a1d2e2[n - 7];
  Real Fb2a2d1e1[n - 7];
  Real Fb2a2d1e2[n - 7];
  Real Fb2a2d2e1[n - 7];
  Real Fb2a2d2e2[n - 7];
  //
  Real Fb1a1d1[n - 7];
  Real Fb1a1d2[n - 7];
  Real Fb1a2d1[n - 7];
  Real Fb1a2d2[n - 7];
  Real Fb2a1d1[n - 7];
  Real Fb2a1d2[n - 7];
  Real Fb2a2d1[n - 7];
  Real Fb2a2d2[n - 7];
    //
  Real Fb1a1[n - 7];
  Real Fb1a2[n - 7];
  Real Fb2a1[n - 7];
  Real Fb2a2[n - 7];
  Real Fb1[n - 7];
  Real Fb2[n - 7];
  Real F[n - 7];
algorithm 
    //计算B下标
  // for i in 1:Nb - 1 loop 
  //   if B >= table_B[Nb] then 
  //     Nb1 := Nb;
  //     Nb2 := Nb;
  //   elseif B >= table_B[i] and B < table_B[i + 1] then 
  //     Nb1 := i;
  //     Nb2 := i + 1;
  //   end if;
  // end for;
  if B <= table_B[1] then 
    Nb1 := 1;
    Nb2 := 1;
  elseif B >= table_B[end] then 
    Nb1 := Nb;
    Nb2 := Nb;
  else
    Nb1 := integer(ceil((B - table_B[1]) / (abs(table_B[2] - table_B[1]))));
    Nb2 := Nb1 + 1;
  end if;
    //计算A下标
  // for i in 1:Na - 1 loop 
  //   if A >= table_A[Na] then 
  //     Na1 := Na;
  //     Na2 := Na;
  //   elseif A >= table_A[i] and A < table_A[i + 1] then 
  //     Na1 := i;
  //     Na2 := i + 1;
  //   end if;
  // end for;
  if A <= table_A[1] then 
    Na1 := 1;
    Na2 := 1;
  elseif A >= table_A[end] then 
    Na1 := Na;
    Na2 := Na;
  else
    Na1 := integer(ceil((A - table_A[1]) / (abs(table_A[2] - table_A[1]))));
    Na2 := Na1 + 1;
  end if;
    //计算D下标
  // for i in 1:Nd - 1 loop 
  //   if D >= table_D[Nd] then 
  //     Nd1 := Nd;
  //     Nd2 := Nd;
  //   elseif D >= table_D[i] and D < table_D[i + 1] then 
  //     Nd1 := i;
  //     Nd2 := i + 1;
  //   end if;
  // end for;
  if D <= table_D[1] then 
    Nd1 := 1;
    Nd2 := 1;
  elseif D >= table_D[end] then 
    Nd1 := Nd;
    Nd2 := Nd;
  else
    Nd1 := integer(ceil((D - table_D[1]) / (abs(table_D[2] - table_D[1]))));
    Nd2 := Nd1 + 1;
  end if;
      //计算E下标
  // for i in 1:Ne - 1 loop 
  //   if E >= table_E[Ne] then 
  //     Ne1 := Ne;
  //     Ne2 := Ne;
  //   elseif E >= table_E[i] and E < table_E[i + 1] then 
  //     Ne1 := i;
  //     Ne2 := i + 1;
  //   end if;
  // end for;
  if E <= table_E[1] then 
    Ne1 := 1;
    Ne2 := 1;
  elseif E >= table_E[end] then 
    Ne1 := Ne;
    Ne2 := Ne;
  else
    Ne1 := integer(ceil((E - table_E[1]) / (abs(table_E[2] - table_E[1]))));
    Ne2 := Ne1 + 1;
  end if;
  //计算G下标
  // for i in 1:Ng - 1 loop 
  //   if G >= table_G[Ng] then 
  //     Ng1 := Ng;
  //     Ng2 := Ng;
  //   elseif G >= table_G[i] and G < table_G[i + 1] then 
  //     Ng1 := i;
  //     Ng2 := i + 1;
  //   end if;
  // end for;
  if G <= table_G[1] then 
    Ng1 := 1;
    Ng2 := 1;
  elseif G >= table_G[end] then 
    Ng1 := Ng;
    Ng2 := Ng;
  else
    Ng1 := integer(ceil((G - table_G[1]) / (abs(table_G[2] - table_G[1]))));
    Ng2 := Ng1 + 1;
  end if;
    //计算H下标
  // for i in 1:Nh - 1 loop 
  //   if H >= table_H[Nh] then 
  //     Nh1 := Nh;
  //     Nh2 := Nh;
  //   elseif H >= table_H[i] and H < table_H[i + 1] then 
  //     Nh1 := i;
  //     Nh2 := i + 1;
  //   end if;
  // end for;
  if H <= table_H[1] then 
    Nh1 := 1;
    Nh2 := 1;
  elseif H >= table_H[end] then 
    Nh1 := Nh;
    Nh2 := Nh;
  else
    Nh1 := integer(ceil((H - table_H[1]) / (abs(table_H[2] - table_H[1]))));
    Nh2 := Nh1 + 1;
  end if;
      //计算J下标
  // for i in 1:Nj - 1 loop 
  //   if J >= table_J[Nj] then 
  //     Nj1 := Nj;
  //     Nj2 := Nj;
  //   elseif J >= table_J[i] and J < table_J[i + 1] then 
  //     Nj1 := i;
  //     Nj2 := i + 1;
  //   end if;
  // end for;
  if J <= table_J[1] then 
    Nj1 := 1;
    Nj2 := 1;
  elseif J >= table_J[end] then 
    Nj1 := Nj;
    Nj2 := Nj;
  else
    Nj1 := integer(ceil((J - table_J[1]) / (abs(table_J[2] - table_J[1]))));
    Nj2 := Nj1 + 1;
  end if;
  //计算BADEGHJ下标
  //
  Nb1a1d1e1g1h1j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb1a1d1e1g1h1j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb1a1d1e1g1h2j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb1a1d1e1g1h2j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb1a1d1e1g2h1j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb1a1d1e1g2h1j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb1a1d1e1g2h2j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb1a1d1e1g2h2j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb1a1d1e2g1h1j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb1a1d1e2g1h1j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb1a1d1e2g1h2j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb1a1d1e2g1h2j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb1a1d1e2g2h1j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb1a1d1e2g2h1j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb1a1d1e2g2h2j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb1a1d1e2g2h2j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb1a1d2e1g1h1j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb1a1d2e1g1h1j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb1a1d2e1g1h2j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb1a1d2e1g1h2j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb1a1d2e1g2h1j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb1a1d2e1g2h1j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb1a1d2e1g2h2j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb1a1d2e1g2h2j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb1a1d2e2g1h1j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb1a1d2e2g1h1j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb1a1d2e2g1h2j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb1a1d2e2g1h2j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb1a1d2e2g2h1j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb1a1d2e2g2h1j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb1a1d2e2g2h2j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb1a1d2e2g2h2j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb1a2d1e1g1h1j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb1a2d1e1g1h1j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb1a2d1e1g1h2j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb1a2d1e1g1h2j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb1a2d1e1g2h1j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb1a2d1e1g2h1j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb1a2d1e1g2h2j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb1a2d1e1g2h2j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb1a2d1e2g1h1j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb1a2d1e2g1h1j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb1a2d1e2g1h2j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb1a2d1e2g1h2j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb1a2d1e2g2h1j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb1a2d1e2g2h1j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb1a2d1e2g2h2j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb1a2d1e2g2h2j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb1a2d2e1g1h1j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb1a2d2e1g1h1j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb1a2d2e1g1h2j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb1a2d2e1g1h2j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb1a2d2e1g2h1j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb1a2d2e1g2h1j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb1a2d2e1g2h2j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb1a2d2e1g2h2j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb1a2d2e2g1h1j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb1a2d2e2g1h1j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb1a2d2e2g1h2j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb1a2d2e2g1h2j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb1a2d2e2g2h1j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb1a2d2e2g2h1j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb1a2d2e2g2h2j1 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb1a2d2e2g2h2j2 := integer((Nb1 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  //
  Nb2a1d1e1g1h1j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb2a1d1e1g1h1j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb2a1d1e1g1h2j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb2a1d1e1g1h2j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb2a1d1e1g2h1j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb2a1d1e1g2h1j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb2a1d1e1g2h2j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb2a1d1e1g2h2j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb2a1d1e2g1h1j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb2a1d1e2g1h1j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb2a1d1e2g1h2j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb2a1d1e2g1h2j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb2a1d1e2g2h1j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb2a1d1e2g2h1j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb2a1d1e2g2h2j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb2a1d1e2g2h2j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb2a1d2e1g1h1j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb2a1d2e1g1h1j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb2a1d2e1g1h2j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb2a1d2e1g1h2j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb2a1d2e1g2h1j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb2a1d2e1g2h1j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb2a1d2e1g2h2j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb2a1d2e1g2h2j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb2a1d2e2g1h1j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb2a1d2e2g1h1j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb2a1d2e2g1h2j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb2a1d2e2g1h2j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb2a1d2e2g2h1j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb2a1d2e2g2h1j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb2a1d2e2g2h2j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb2a1d2e2g2h2j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na1 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb2a2d1e1g1h1j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb2a2d1e1g1h1j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb2a2d1e1g1h2j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb2a2d1e1g1h2j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb2a2d1e1g2h1j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb2a2d1e1g2h1j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb2a2d1e1g2h2j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb2a2d1e1g2h2j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb2a2d1e2g1h1j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb2a2d1e2g1h1j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb2a2d1e2g1h2j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb2a2d1e2g1h2j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb2a2d1e2g2h1j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb2a2d1e2g2h1j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb2a2d1e2g2h2j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb2a2d1e2g2h2j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd1 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb2a2d2e1g1h1j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb2a2d2e1g1h1j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb2a2d2e1g1h2j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb2a2d2e1g1h2j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb2a2d2e1g2h1j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb2a2d2e1g2h1j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb2a2d2e1g2h2j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb2a2d2e1g2h2j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne1 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb2a2d2e2g1h1j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb2a2d2e2g1h1j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb2a2d2e2g1h2j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb2a2d2e2g1h2j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng1 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Nb2a2d2e2g2h1j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj1);
  Nb2a2d2e2g2h1j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh1 - 1) * Nj + Nj2);
  Nb2a2d2e2g2h2j1 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj1);
  Nb2a2d2e2g2h2j2 := integer((Nb2 - 1) * Na * Nd * Ne * Ng * Nh * Nj + (Na2 - 1) * Nd * Ne * Ng * Nh * Nj + (Nd2 - 1) * Ne * Ng * Nh * Nj + (Ne2 - 1) * Ng * Nh * Nj + (Ng2 - 1) * Nh * Nj + (Nh2 - 1) * Nj + Nj2);
  Fb1a1d1e1g1h1j1 := SevenWei_GetLine_Opt(Nb1a1d1e1g1h1j1);
  Fb1a1d1e1g1h1j2 := SevenWei_GetLine_Opt(Nb1a1d1e1g1h1j2);
  Fb1a1d1e1g1h2j1 := SevenWei_GetLine_Opt(Nb1a1d1e1g1h2j1);
  Fb1a1d1e1g1h2j2 := SevenWei_GetLine_Opt(Nb1a1d1e1g1h2j2);
  Fb1a1d1e1g2h1j1 := SevenWei_GetLine_Opt(Nb1a1d1e1g2h1j1);
  Fb1a1d1e1g2h1j2 := SevenWei_GetLine_Opt(Nb1a1d1e1g2h1j2);
  Fb1a1d1e1g2h2j1 := SevenWei_GetLine_Opt(Nb1a1d1e1g2h2j1);
  Fb1a1d1e1g2h2j2 := SevenWei_GetLine_Opt(Nb1a1d1e1g2h2j2);
  Fb1a1d1e2g1h1j1 := SevenWei_GetLine_Opt(Nb1a1d1e2g1h1j1);
  Fb1a1d1e2g1h1j2 := SevenWei_GetLine_Opt(Nb1a1d1e2g1h1j2);
  Fb1a1d1e2g1h2j1 := SevenWei_GetLine_Opt(Nb1a1d1e2g1h2j1);
  Fb1a1d1e2g1h2j2 := SevenWei_GetLine_Opt(Nb1a1d1e2g1h2j2);
  Fb1a1d1e2g2h1j1 := SevenWei_GetLine_Opt(Nb1a1d1e2g2h1j1);
  Fb1a1d1e2g2h1j2 := SevenWei_GetLine_Opt(Nb1a1d1e2g2h1j2);
  Fb1a1d1e2g2h2j1 := SevenWei_GetLine_Opt(Nb1a1d1e2g2h2j1);
  Fb1a1d1e2g2h2j2 := SevenWei_GetLine_Opt(Nb1a1d1e2g2h2j2);
  Fb1a1d2e1g1h1j1 := SevenWei_GetLine_Opt(Nb1a1d2e1g1h1j1);
  Fb1a1d2e1g1h1j2 := SevenWei_GetLine_Opt(Nb1a1d2e1g1h1j2);
  Fb1a1d2e1g1h2j1 := SevenWei_GetLine_Opt(Nb1a1d2e1g1h2j1);
  Fb1a1d2e1g1h2j2 := SevenWei_GetLine_Opt(Nb1a1d2e1g1h2j2);
  Fb1a1d2e1g2h1j1 := SevenWei_GetLine_Opt(Nb1a1d2e1g2h1j1);
  Fb1a1d2e1g2h1j2 := SevenWei_GetLine_Opt(Nb1a1d2e1g2h1j2);
  Fb1a1d2e1g2h2j1 := SevenWei_GetLine_Opt(Nb1a1d2e1g2h2j1);
  Fb1a1d2e1g2h2j2 := SevenWei_GetLine_Opt(Nb1a1d2e1g2h2j2);
  Fb1a1d2e2g1h1j1 := SevenWei_GetLine_Opt(Nb1a1d2e2g1h1j1);
  Fb1a1d2e2g1h1j2 := SevenWei_GetLine_Opt(Nb1a1d2e2g1h1j2);
  Fb1a1d2e2g1h2j1 := SevenWei_GetLine_Opt(Nb1a1d2e2g1h2j1);
  Fb1a1d2e2g1h2j2 := SevenWei_GetLine_Opt(Nb1a1d2e2g1h2j2);
  Fb1a1d2e2g2h1j1 := SevenWei_GetLine_Opt(Nb1a1d2e2g2h1j1);
  Fb1a1d2e2g2h1j2 := SevenWei_GetLine_Opt(Nb1a1d2e2g2h1j2);
  Fb1a1d2e2g2h2j1 := SevenWei_GetLine_Opt(Nb1a1d2e2g2h2j1);
  Fb1a1d2e2g2h2j2 := SevenWei_GetLine_Opt(Nb1a1d2e2g2h2j2);
  Fb1a2d1e1g1h1j1 := SevenWei_GetLine_Opt(Nb1a2d1e1g1h1j1);
  Fb1a2d1e1g1h1j2 := SevenWei_GetLine_Opt(Nb1a2d1e1g1h1j2);
  Fb1a2d1e1g1h2j1 := SevenWei_GetLine_Opt(Nb1a2d1e1g1h2j1);
  Fb1a2d1e1g1h2j2 := SevenWei_GetLine_Opt(Nb1a2d1e1g1h2j2);
  Fb1a2d1e1g2h1j1 := SevenWei_GetLine_Opt(Nb1a2d1e1g2h1j1);
  Fb1a2d1e1g2h1j2 := SevenWei_GetLine_Opt(Nb1a2d1e1g2h1j2);
  Fb1a2d1e1g2h2j1 := SevenWei_GetLine_Opt(Nb1a2d1e1g2h2j1);
  Fb1a2d1e1g2h2j2 := SevenWei_GetLine_Opt(Nb1a2d1e1g2h2j2);
  Fb1a2d1e2g1h1j1 := SevenWei_GetLine_Opt(Nb1a2d1e2g1h1j1);
  Fb1a2d1e2g1h1j2 := SevenWei_GetLine_Opt(Nb1a2d1e2g1h1j2);
  Fb1a2d1e2g1h2j1 := SevenWei_GetLine_Opt(Nb1a2d1e2g1h2j1);
  Fb1a2d1e2g1h2j2 := SevenWei_GetLine_Opt(Nb1a2d1e2g1h2j2);
  Fb1a2d1e2g2h1j1 := SevenWei_GetLine_Opt(Nb1a2d1e2g2h1j1);
  Fb1a2d1e2g2h1j2 := SevenWei_GetLine_Opt(Nb1a2d1e2g2h1j2);
  Fb1a2d1e2g2h2j1 := SevenWei_GetLine_Opt(Nb1a2d1e2g2h2j1);
  Fb1a2d1e2g2h2j2 := SevenWei_GetLine_Opt(Nb1a2d1e2g2h2j2);
  Fb1a2d2e1g1h1j1 := SevenWei_GetLine_Opt(Nb1a2d2e1g1h1j1);
  Fb1a2d2e1g1h1j2 := SevenWei_GetLine_Opt(Nb1a2d2e1g1h1j2);
  Fb1a2d2e1g1h2j1 := SevenWei_GetLine_Opt(Nb1a2d2e1g1h2j1);
  Fb1a2d2e1g1h2j2 := SevenWei_GetLine_Opt(Nb1a2d2e1g1h2j2);
  Fb1a2d2e1g2h1j1 := SevenWei_GetLine_Opt(Nb1a2d2e1g2h1j1);
  Fb1a2d2e1g2h1j2 := SevenWei_GetLine_Opt(Nb1a2d2e1g2h1j2);
  Fb1a2d2e1g2h2j1 := SevenWei_GetLine_Opt(Nb1a2d2e1g2h2j1);
  Fb1a2d2e1g2h2j2 := SevenWei_GetLine_Opt(Nb1a2d2e1g2h2j2);
  Fb1a2d2e2g1h1j1 := SevenWei_GetLine_Opt(Nb1a2d2e2g1h1j1);
  Fb1a2d2e2g1h1j2 := SevenWei_GetLine_Opt(Nb1a2d2e2g1h1j2);
  Fb1a2d2e2g1h2j1 := SevenWei_GetLine_Opt(Nb1a2d2e2g1h2j1);
  Fb1a2d2e2g1h2j2 := SevenWei_GetLine_Opt(Nb1a2d2e2g1h2j2);
  Fb1a2d2e2g2h1j1 := SevenWei_GetLine_Opt(Nb1a2d2e2g2h1j1);
  Fb1a2d2e2g2h1j2 := SevenWei_GetLine_Opt(Nb1a2d2e2g2h1j2);
  Fb1a2d2e2g2h2j1 := SevenWei_GetLine_Opt(Nb1a2d2e2g2h2j1);
  Fb1a2d2e2g2h2j2 := SevenWei_GetLine_Opt(Nb1a2d2e2g2h2j2);
  //					
  Fb2a1d1e1g1h1j1 := SevenWei_GetLine_Opt(Nb2a1d1e1g1h1j1);
  Fb2a1d1e1g1h1j2 := SevenWei_GetLine_Opt(Nb2a1d1e1g1h1j2);
  Fb2a1d1e1g1h2j1 := SevenWei_GetLine_Opt(Nb2a1d1e1g1h2j1);
  Fb2a1d1e1g1h2j2 := SevenWei_GetLine_Opt(Nb2a1d1e1g1h2j2);
  Fb2a1d1e1g2h1j1 := SevenWei_GetLine_Opt(Nb2a1d1e1g2h1j1);
  Fb2a1d1e1g2h1j2 := SevenWei_GetLine_Opt(Nb2a1d1e1g2h1j2);
  Fb2a1d1e1g2h2j1 := SevenWei_GetLine_Opt(Nb2a1d1e1g2h2j1);
  Fb2a1d1e1g2h2j2 := SevenWei_GetLine_Opt(Nb2a1d1e1g2h2j2);
  Fb2a1d1e2g1h1j1 := SevenWei_GetLine_Opt(Nb2a1d1e2g1h1j1);
  Fb2a1d1e2g1h1j2 := SevenWei_GetLine_Opt(Nb2a1d1e2g1h1j2);
  Fb2a1d1e2g1h2j1 := SevenWei_GetLine_Opt(Nb2a1d1e2g1h2j1);
  Fb2a1d1e2g1h2j2 := SevenWei_GetLine_Opt(Nb2a1d1e2g1h2j2);
  Fb2a1d1e2g2h1j1 := SevenWei_GetLine_Opt(Nb2a1d1e2g2h1j1);
  Fb2a1d1e2g2h1j2 := SevenWei_GetLine_Opt(Nb2a1d1e2g2h1j2);
  Fb2a1d1e2g2h2j1 := SevenWei_GetLine_Opt(Nb2a1d1e2g2h2j1);
  Fb2a1d1e2g2h2j2 := SevenWei_GetLine_Opt(Nb2a1d1e2g2h2j2);
  Fb2a1d2e1g1h1j1 := SevenWei_GetLine_Opt(Nb2a1d2e1g1h1j1);
  Fb2a1d2e1g1h1j2 := SevenWei_GetLine_Opt(Nb2a1d2e1g1h1j2);
  Fb2a1d2e1g1h2j1 := SevenWei_GetLine_Opt(Nb2a1d2e1g1h2j1);
  Fb2a1d2e1g1h2j2 := SevenWei_GetLine_Opt(Nb2a1d2e1g1h2j2);
  Fb2a1d2e1g2h1j1 := SevenWei_GetLine_Opt(Nb2a1d2e1g2h1j1);
  Fb2a1d2e1g2h1j2 := SevenWei_GetLine_Opt(Nb2a1d2e1g2h1j2);
  Fb2a1d2e1g2h2j1 := SevenWei_GetLine_Opt(Nb2a1d2e1g2h2j1);
  Fb2a1d2e1g2h2j2 := SevenWei_GetLine_Opt(Nb2a1d2e1g2h2j2);
  Fb2a1d2e2g1h1j1 := SevenWei_GetLine_Opt(Nb2a1d2e2g1h1j1);
  Fb2a1d2e2g1h1j2 := SevenWei_GetLine_Opt(Nb2a1d2e2g1h1j2);
  Fb2a1d2e2g1h2j1 := SevenWei_GetLine_Opt(Nb2a1d2e2g1h2j1);
  Fb2a1d2e2g1h2j2 := SevenWei_GetLine_Opt(Nb2a1d2e2g1h2j2);
  Fb2a1d2e2g2h1j1 := SevenWei_GetLine_Opt(Nb2a1d2e2g2h1j1);
  Fb2a1d2e2g2h1j2 := SevenWei_GetLine_Opt(Nb2a1d2e2g2h1j2);
  Fb2a1d2e2g2h2j1 := SevenWei_GetLine_Opt(Nb2a1d2e2g2h2j1);
  Fb2a1d2e2g2h2j2 := SevenWei_GetLine_Opt(Nb2a1d2e2g2h2j2);
  Fb2a2d1e1g1h1j1 := SevenWei_GetLine_Opt(Nb2a2d1e1g1h1j1);
  Fb2a2d1e1g1h1j2 := SevenWei_GetLine_Opt(Nb2a2d1e1g1h1j2);
  Fb2a2d1e1g1h2j1 := SevenWei_GetLine_Opt(Nb2a2d1e1g1h2j1);
  Fb2a2d1e1g1h2j2 := SevenWei_GetLine_Opt(Nb2a2d1e1g1h2j2);
  Fb2a2d1e1g2h1j1 := SevenWei_GetLine_Opt(Nb2a2d1e1g2h1j1);
  Fb2a2d1e1g2h1j2 := SevenWei_GetLine_Opt(Nb2a2d1e1g2h1j2);
  Fb2a2d1e1g2h2j1 := SevenWei_GetLine_Opt(Nb2a2d1e1g2h2j1);
  Fb2a2d1e1g2h2j2 := SevenWei_GetLine_Opt(Nb2a2d1e1g2h2j2);
  Fb2a2d1e2g1h1j1 := SevenWei_GetLine_Opt(Nb2a2d1e2g1h1j1);
  Fb2a2d1e2g1h1j2 := SevenWei_GetLine_Opt(Nb2a2d1e2g1h1j2);
  Fb2a2d1e2g1h2j1 := SevenWei_GetLine_Opt(Nb2a2d1e2g1h2j1);
  Fb2a2d1e2g1h2j2 := SevenWei_GetLine_Opt(Nb2a2d1e2g1h2j2);
  Fb2a2d1e2g2h1j1 := SevenWei_GetLine_Opt(Nb2a2d1e2g2h1j1);
  Fb2a2d1e2g2h1j2 := SevenWei_GetLine_Opt(Nb2a2d1e2g2h1j2);
  Fb2a2d1e2g2h2j1 := SevenWei_GetLine_Opt(Nb2a2d1e2g2h2j1);
  Fb2a2d1e2g2h2j2 := SevenWei_GetLine_Opt(Nb2a2d1e2g2h2j2);
  Fb2a2d2e1g1h1j1 := SevenWei_GetLine_Opt(Nb2a2d2e1g1h1j1);
  Fb2a2d2e1g1h1j2 := SevenWei_GetLine_Opt(Nb2a2d2e1g1h1j2);
  Fb2a2d2e1g1h2j1 := SevenWei_GetLine_Opt(Nb2a2d2e1g1h2j1);
  Fb2a2d2e1g1h2j2 := SevenWei_GetLine_Opt(Nb2a2d2e1g1h2j2);
  Fb2a2d2e1g2h1j1 := SevenWei_GetLine_Opt(Nb2a2d2e1g2h1j1);
  Fb2a2d2e1g2h1j2 := SevenWei_GetLine_Opt(Nb2a2d2e1g2h1j2);
  Fb2a2d2e1g2h2j1 := SevenWei_GetLine_Opt(Nb2a2d2e1g2h2j1);
  Fb2a2d2e1g2h2j2 := SevenWei_GetLine_Opt(Nb2a2d2e1g2h2j2);
  Fb2a2d2e2g1h1j1 := SevenWei_GetLine_Opt(Nb2a2d2e2g1h1j1);
  Fb2a2d2e2g1h1j2 := SevenWei_GetLine_Opt(Nb2a2d2e2g1h1j2);
  Fb2a2d2e2g1h2j1 := SevenWei_GetLine_Opt(Nb2a2d2e2g1h2j1);
  Fb2a2d2e2g1h2j2 := SevenWei_GetLine_Opt(Nb2a2d2e2g1h2j2);
  Fb2a2d2e2g2h1j1 := SevenWei_GetLine_Opt(Nb2a2d2e2g2h1j1);
  Fb2a2d2e2g2h1j2 := SevenWei_GetLine_Opt(Nb2a2d2e2g2h1j2);
  Fb2a2d2e2g2h2j1 := SevenWei_GetLine_Opt(Nb2a2d2e2g2h2j1);
  Fb2a2d2e2g2h2j2 := SevenWei_GetLine_Opt(Nb2a2d2e2g2h2j2);


  for i in 1:n - 7 loop 
    //计算Fbadegh
    Fb1a1d1e1g1h1[i] := if Nj2 == Nj1 then Fb1a1d1e1g1h1j1[i] else (Fb1a1d1e1g1h1j2[i] - Fb1a1d1e1g1h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a1d1e1g1h1j1[i];
    Fb1a1d1e1g1h2[i] := if Nj2 == Nj1 then Fb1a1d1e1g1h2j1[i] else (Fb1a1d1e1g1h2j2[i] - Fb1a1d1e1g1h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a1d1e1g1h2j1[i];
    Fb1a1d1e1g2h1[i] := if Nj2 == Nj1 then Fb1a1d1e1g2h1j1[i] else (Fb1a1d1e1g2h1j2[i] - Fb1a1d1e1g2h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a1d1e1g2h1j1[i];
    Fb1a1d1e1g2h2[i] := if Nj2 == Nj1 then Fb1a1d1e1g2h2j1[i] else (Fb1a1d1e1g2h2j2[i] - Fb1a1d1e1g2h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a1d1e1g2h2j1[i];
    Fb1a1d1e2g1h1[i] := if Nj2 == Nj1 then Fb1a1d1e2g1h1j1[i] else (Fb1a1d1e2g1h1j2[i] - Fb1a1d1e2g1h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a1d1e2g1h1j1[i];
    Fb1a1d1e2g1h2[i] := if Nj2 == Nj1 then Fb1a1d1e2g1h2j1[i] else (Fb1a1d1e2g1h2j2[i] - Fb1a1d1e2g1h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a1d1e2g1h2j1[i];
    Fb1a1d1e2g2h1[i] := if Nj2 == Nj1 then Fb1a1d1e2g2h1j1[i] else (Fb1a1d1e2g2h1j2[i] - Fb1a1d1e2g2h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a1d1e2g2h1j1[i];
    Fb1a1d1e2g2h2[i] := if Nj2 == Nj1 then Fb1a1d1e2g2h2j1[i] else (Fb1a1d1e2g2h2j2[i] - Fb1a1d1e2g2h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a1d1e2g2h2j1[i];
    Fb1a1d2e1g1h1[i] := if Nj2 == Nj1 then Fb1a1d2e1g1h1j1[i] else (Fb1a1d2e1g1h1j2[i] - Fb1a1d2e1g1h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a1d2e1g1h1j1[i];
    Fb1a1d2e1g1h2[i] := if Nj2 == Nj1 then Fb1a1d2e1g1h2j1[i] else (Fb1a1d2e1g1h2j2[i] - Fb1a1d2e1g1h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a1d2e1g1h2j1[i];
    Fb1a1d2e1g2h1[i] := if Nj2 == Nj1 then Fb1a1d2e1g2h1j1[i] else (Fb1a1d2e1g2h1j2[i] - Fb1a1d2e1g2h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a1d2e1g2h1j1[i];
    Fb1a1d2e1g2h2[i] := if Nj2 == Nj1 then Fb1a1d2e1g2h2j1[i] else (Fb1a1d2e1g2h2j2[i] - Fb1a1d2e1g2h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a1d2e1g2h2j1[i];
    Fb1a1d2e2g1h1[i] := if Nj2 == Nj1 then Fb1a1d2e2g1h1j1[i] else (Fb1a1d2e2g1h1j2[i] - Fb1a1d2e2g1h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a1d2e2g1h1j1[i];
    Fb1a1d2e2g1h2[i] := if Nj2 == Nj1 then Fb1a1d2e2g1h2j1[i] else (Fb1a1d2e2g1h2j2[i] - Fb1a1d2e2g1h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a1d2e2g1h2j1[i];
    Fb1a1d2e2g2h1[i] := if Nj2 == Nj1 then Fb1a1d2e2g2h1j1[i] else (Fb1a1d2e2g2h1j2[i] - Fb1a1d2e2g2h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a1d2e2g2h1j1[i];
    Fb1a1d2e2g2h2[i] := if Nj2 == Nj1 then Fb1a1d2e2g2h2j1[i] else (Fb1a1d2e2g2h2j2[i] - Fb1a1d2e2g2h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a1d2e2g2h2j1[i];
    Fb1a2d1e1g1h1[i] := if Nj2 == Nj1 then Fb1a2d1e1g1h1j1[i] else (Fb1a2d1e1g1h1j2[i] - Fb1a2d1e1g1h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a2d1e1g1h1j1[i];
    Fb1a2d1e1g1h2[i] := if Nj2 == Nj1 then Fb1a2d1e1g1h2j1[i] else (Fb1a2d1e1g1h2j2[i] - Fb1a2d1e1g1h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a2d1e1g1h2j1[i];
    Fb1a2d1e1g2h1[i] := if Nj2 == Nj1 then Fb1a2d1e1g2h1j1[i] else (Fb1a2d1e1g2h1j2[i] - Fb1a2d1e1g2h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a2d1e1g2h1j1[i];
    Fb1a2d1e1g2h2[i] := if Nj2 == Nj1 then Fb1a2d1e1g2h2j1[i] else (Fb1a2d1e1g2h2j2[i] - Fb1a2d1e1g2h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a2d1e1g2h2j1[i];
    Fb1a2d1e2g1h1[i] := if Nj2 == Nj1 then Fb1a2d1e2g1h1j1[i] else (Fb1a2d1e2g1h1j2[i] - Fb1a2d1e2g1h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a2d1e2g1h1j1[i];
    Fb1a2d1e2g1h2[i] := if Nj2 == Nj1 then Fb1a2d1e2g1h2j1[i] else (Fb1a2d1e2g1h2j2[i] - Fb1a2d1e2g1h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a2d1e2g1h2j1[i];
    Fb1a2d1e2g2h1[i] := if Nj2 == Nj1 then Fb1a2d1e2g2h1j1[i] else (Fb1a2d1e2g2h1j2[i] - Fb1a2d1e2g2h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a2d1e2g2h1j1[i];
    Fb1a2d1e2g2h2[i] := if Nj2 == Nj1 then Fb1a2d1e2g2h2j1[i] else (Fb1a2d1e2g2h2j2[i] - Fb1a2d1e2g2h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a2d1e2g2h2j1[i];
    Fb1a2d2e1g1h1[i] := if Nj2 == Nj1 then Fb1a2d2e1g1h1j1[i] else (Fb1a2d2e1g1h1j2[i] - Fb1a2d2e1g1h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a2d2e1g1h1j1[i];
    Fb1a2d2e1g1h2[i] := if Nj2 == Nj1 then Fb1a2d2e1g1h2j1[i] else (Fb1a2d2e1g1h2j2[i] - Fb1a2d2e1g1h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a2d2e1g1h2j1[i];
    Fb1a2d2e1g2h1[i] := if Nj2 == Nj1 then Fb1a2d2e1g2h1j1[i] else (Fb1a2d2e1g2h1j2[i] - Fb1a2d2e1g2h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a2d2e1g2h1j1[i];
    Fb1a2d2e1g2h2[i] := if Nj2 == Nj1 then Fb1a2d2e1g2h2j1[i] else (Fb1a2d2e1g2h2j2[i] - Fb1a2d2e1g2h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a2d2e1g2h2j1[i];
    Fb1a2d2e2g1h1[i] := if Nj2 == Nj1 then Fb1a2d2e2g1h1j1[i] else (Fb1a2d2e2g1h1j2[i] - Fb1a2d2e2g1h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a2d2e2g1h1j1[i];
    Fb1a2d2e2g1h2[i] := if Nj2 == Nj1 then Fb1a2d2e2g1h2j1[i] else (Fb1a2d2e2g1h2j2[i] - Fb1a2d2e2g1h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a2d2e2g1h2j1[i];
    Fb1a2d2e2g2h1[i] := if Nj2 == Nj1 then Fb1a2d2e2g2h1j1[i] else (Fb1a2d2e2g2h1j2[i] - Fb1a2d2e2g2h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a2d2e2g2h1j1[i];
    Fb1a2d2e2g2h2[i] := if Nj2 == Nj1 then Fb1a2d2e2g2h2j1[i] else (Fb1a2d2e2g2h2j2[i] - Fb1a2d2e2g2h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb1a2d2e2g2h2j1[i];
    //
    Fb2a1d1e1g1h1[i] := if Nj2 == Nj1 then Fb2a1d1e1g1h1j1[i] else (Fb2a1d1e1g1h1j2[i] - Fb2a1d1e1g1h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a1d1e1g1h1j1[i];
    Fb2a1d1e1g1h2[i] := if Nj2 == Nj1 then Fb2a1d1e1g1h2j1[i] else (Fb2a1d1e1g1h2j2[i] - Fb2a1d1e1g1h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a1d1e1g1h2j1[i];
    Fb2a1d1e1g2h1[i] := if Nj2 == Nj1 then Fb2a1d1e1g2h1j1[i] else (Fb2a1d1e1g2h1j2[i] - Fb2a1d1e1g2h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a1d1e1g2h1j1[i];
    Fb2a1d1e1g2h2[i] := if Nj2 == Nj1 then Fb2a1d1e1g2h2j1[i] else (Fb2a1d1e1g2h2j2[i] - Fb2a1d1e1g2h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a1d1e1g2h2j1[i];
    Fb2a1d1e2g1h1[i] := if Nj2 == Nj1 then Fb2a1d1e2g1h1j1[i] else (Fb2a1d1e2g1h1j2[i] - Fb2a1d1e2g1h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a1d1e2g1h1j1[i];
    Fb2a1d1e2g1h2[i] := if Nj2 == Nj1 then Fb2a1d1e2g1h2j1[i] else (Fb2a1d1e2g1h2j2[i] - Fb2a1d1e2g1h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a1d1e2g1h2j1[i];
    Fb2a1d1e2g2h1[i] := if Nj2 == Nj1 then Fb2a1d1e2g2h1j1[i] else (Fb2a1d1e2g2h1j2[i] - Fb2a1d1e2g2h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a1d1e2g2h1j1[i];
    Fb2a1d1e2g2h2[i] := if Nj2 == Nj1 then Fb2a1d1e2g2h2j1[i] else (Fb2a1d1e2g2h2j2[i] - Fb2a1d1e2g2h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a1d1e2g2h2j1[i];
    Fb2a1d2e1g1h1[i] := if Nj2 == Nj1 then Fb2a1d2e1g1h1j1[i] else (Fb2a1d2e1g1h1j2[i] - Fb2a1d2e1g1h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a1d2e1g1h1j1[i];
    Fb2a1d2e1g1h2[i] := if Nj2 == Nj1 then Fb2a1d2e1g1h2j1[i] else (Fb2a1d2e1g1h2j2[i] - Fb2a1d2e1g1h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a1d2e1g1h2j1[i];
    Fb2a1d2e1g2h1[i] := if Nj2 == Nj1 then Fb2a1d2e1g2h1j1[i] else (Fb2a1d2e1g2h1j2[i] - Fb2a1d2e1g2h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a1d2e1g2h1j1[i];
    Fb2a1d2e1g2h2[i] := if Nj2 == Nj1 then Fb2a1d2e1g2h2j1[i] else (Fb2a1d2e1g2h2j2[i] - Fb2a1d2e1g2h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a1d2e1g2h2j1[i];
    Fb2a1d2e2g1h1[i] := if Nj2 == Nj1 then Fb2a1d2e2g1h1j1[i] else (Fb2a1d2e2g1h1j2[i] - Fb2a1d2e2g1h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a1d2e2g1h1j1[i];
    Fb2a1d2e2g1h2[i] := if Nj2 == Nj1 then Fb2a1d2e2g1h2j1[i] else (Fb2a1d2e2g1h2j2[i] - Fb2a1d2e2g1h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a1d2e2g1h2j1[i];
    Fb2a1d2e2g2h1[i] := if Nj2 == Nj1 then Fb2a1d2e2g2h1j1[i] else (Fb2a1d2e2g2h1j2[i] - Fb2a1d2e2g2h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a1d2e2g2h1j1[i];
    Fb2a1d2e2g2h2[i] := if Nj2 == Nj1 then Fb2a1d2e2g2h2j1[i] else (Fb2a1d2e2g2h2j2[i] - Fb2a1d2e2g2h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a1d2e2g2h2j1[i];
    Fb2a2d1e1g1h1[i] := if Nj2 == Nj1 then Fb2a2d1e1g1h1j1[i] else (Fb2a2d1e1g1h1j2[i] - Fb2a2d1e1g1h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a2d1e1g1h1j1[i];
    Fb2a2d1e1g1h2[i] := if Nj2 == Nj1 then Fb2a2d1e1g1h2j1[i] else (Fb2a2d1e1g1h2j2[i] - Fb2a2d1e1g1h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a2d1e1g1h2j1[i];
    Fb2a2d1e1g2h1[i] := if Nj2 == Nj1 then Fb2a2d1e1g2h1j1[i] else (Fb2a2d1e1g2h1j2[i] - Fb2a2d1e1g2h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a2d1e1g2h1j1[i];
    Fb2a2d1e1g2h2[i] := if Nj2 == Nj1 then Fb2a2d1e1g2h2j1[i] else (Fb2a2d1e1g2h2j2[i] - Fb2a2d1e1g2h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a2d1e1g2h2j1[i];
    Fb2a2d1e2g1h1[i] := if Nj2 == Nj1 then Fb2a2d1e2g1h1j1[i] else (Fb2a2d1e2g1h1j2[i] - Fb2a2d1e2g1h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a2d1e2g1h1j1[i];
    Fb2a2d1e2g1h2[i] := if Nj2 == Nj1 then Fb2a2d1e2g1h2j1[i] else (Fb2a2d1e2g1h2j2[i] - Fb2a2d1e2g1h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a2d1e2g1h2j1[i];
    Fb2a2d1e2g2h1[i] := if Nj2 == Nj1 then Fb2a2d1e2g2h1j1[i] else (Fb2a2d1e2g2h1j2[i] - Fb2a2d1e2g2h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a2d1e2g2h1j1[i];
    Fb2a2d1e2g2h2[i] := if Nj2 == Nj1 then Fb2a2d1e2g2h2j1[i] else (Fb2a2d1e2g2h2j2[i] - Fb2a2d1e2g2h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a2d1e2g2h2j1[i];
    Fb2a2d2e1g1h1[i] := if Nj2 == Nj1 then Fb2a2d2e1g1h1j1[i] else (Fb2a2d2e1g1h1j2[i] - Fb2a2d2e1g1h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a2d2e1g1h1j1[i];
    Fb2a2d2e1g1h2[i] := if Nj2 == Nj1 then Fb2a2d2e1g1h2j1[i] else (Fb2a2d2e1g1h2j2[i] - Fb2a2d2e1g1h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a2d2e1g1h2j1[i];
    Fb2a2d2e1g2h1[i] := if Nj2 == Nj1 then Fb2a2d2e1g2h1j1[i] else (Fb2a2d2e1g2h1j2[i] - Fb2a2d2e1g2h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a2d2e1g2h1j1[i];
    Fb2a2d2e1g2h2[i] := if Nj2 == Nj1 then Fb2a2d2e1g2h2j1[i] else (Fb2a2d2e1g2h2j2[i] - Fb2a2d2e1g2h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a2d2e1g2h2j1[i];
    Fb2a2d2e2g1h1[i] := if Nj2 == Nj1 then Fb2a2d2e2g1h1j1[i] else (Fb2a2d2e2g1h1j2[i] - Fb2a2d2e2g1h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a2d2e2g1h1j1[i];
    Fb2a2d2e2g1h2[i] := if Nj2 == Nj1 then Fb2a2d2e2g1h2j1[i] else (Fb2a2d2e2g1h2j2[i] - Fb2a2d2e2g1h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a2d2e2g1h2j1[i];
    Fb2a2d2e2g2h1[i] := if Nj2 == Nj1 then Fb2a2d2e2g2h1j1[i] else (Fb2a2d2e2g2h1j2[i] - Fb2a2d2e2g2h1j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a2d2e2g2h1j1[i];
    Fb2a2d2e2g2h2[i] := if Nj2 == Nj1 then Fb2a2d2e2g2h2j1[i] else (Fb2a2d2e2g2h2j2[i] - Fb2a2d2e2g2h2j1[i]) * (J - table_J[Nj1]) / (table_J[Nj2] - table_J[Nj1]) + Fb2a2d2e2g2h2j1[i];
    //计算Fbadeg
    Fb1a1d1e1g1[i] := if Nh2 == Nh1 then Fb1a1d1e1g1h1[i] else (Fb1a1d1e1g1h2[i] - Fb1a1d1e1g1h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb1a1d1e1g1h1[i];
    Fb1a1d1e1g2[i] := if Nh2 == Nh1 then Fb1a1d1e1g2h2[i] else (Fb1a1d1e1g2h2[i] - Fb1a1d1e1g2h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb1a1d1e1g2h1[i];
    Fb1a1d1e2g1[i] := if Nh2 == Nh1 then Fb1a1d1e2g1h1[i] else (Fb1a1d1e2g1h2[i] - Fb1a1d1e2g1h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb1a1d1e2g1h1[i];
    Fb1a1d1e2g2[i] := if Nh2 == Nh1 then Fb1a1d1e2g2h2[i] else (Fb1a1d1e2g2h2[i] - Fb1a1d1e2g2h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb1a1d1e2g2h1[i];
    Fb1a1d2e1g1[i] := if Nh2 == Nh1 then Fb1a1d2e1g1h1[i] else (Fb1a1d2e1g1h2[i] - Fb1a1d2e1g1h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb1a1d2e1g1h1[i];
    Fb1a1d2e1g2[i] := if Nh2 == Nh1 then Fb1a1d2e1g2h2[i] else (Fb1a1d2e1g2h2[i] - Fb1a1d2e1g2h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb1a1d2e1g2h1[i];
    Fb1a1d2e2g1[i] := if Nh2 == Nh1 then Fb1a1d2e2g1h1[i] else (Fb1a1d2e2g1h2[i] - Fb1a1d2e2g1h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb1a1d2e2g1h1[i];
    Fb1a1d2e2g2[i] := if Nh2 == Nh1 then Fb1a1d2e2g2h2[i] else (Fb1a1d2e2g2h2[i] - Fb1a1d2e2g2h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb1a1d2e2g2h1[i];
    Fb1a2d1e1g1[i] := if Nh2 == Nh1 then Fb1a2d1e1g1h1[i] else (Fb1a2d1e1g1h2[i] - Fb1a2d1e1g1h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb1a2d1e1g1h1[i];
    Fb1a2d1e1g2[i] := if Nh2 == Nh1 then Fb1a2d1e1g2h2[i] else (Fb1a2d1e1g2h2[i] - Fb1a2d1e1g2h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb1a2d1e1g2h1[i];
    Fb1a2d1e2g1[i] := if Nh2 == Nh1 then Fb1a2d1e2g1h1[i] else (Fb1a2d1e2g1h2[i] - Fb1a2d1e2g1h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb1a2d1e2g1h1[i];
    Fb1a2d1e2g2[i] := if Nh2 == Nh1 then Fb1a2d1e2g2h2[i] else (Fb1a2d1e2g2h2[i] - Fb1a2d1e2g2h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb1a2d1e2g2h1[i];
    Fb1a2d2e1g1[i] := if Nh2 == Nh1 then Fb1a2d2e1g1h1[i] else (Fb1a2d2e1g1h2[i] - Fb1a2d2e1g1h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb1a2d2e1g1h1[i];
    Fb1a2d2e1g2[i] := if Nh2 == Nh1 then Fb1a2d2e1g2h2[i] else (Fb1a2d2e1g2h2[i] - Fb1a2d2e1g2h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb1a2d2e1g2h1[i];
    Fb1a2d2e2g1[i] := if Nh2 == Nh1 then Fb1a2d2e2g1h1[i] else (Fb1a2d2e2g1h2[i] - Fb1a2d2e2g1h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb1a2d2e2g1h1[i];
    Fb1a2d2e2g2[i] := if Nh2 == Nh1 then Fb1a2d2e2g2h2[i] else (Fb1a2d2e2g2h2[i] - Fb1a2d2e2g2h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb1a2d2e2g2h1[i];
    //
    Fb2a1d1e1g1[i] := if Nh2 == Nh1 then Fb2a1d1e1g1h1[i] else (Fb2a1d1e1g1h2[i] - Fb2a1d1e1g1h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb2a1d1e1g1h1[i];
    Fb2a1d1e1g2[i] := if Nh2 == Nh1 then Fb2a1d1e1g2h2[i] else (Fb2a1d1e1g2h2[i] - Fb2a1d1e1g2h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb2a1d1e1g2h1[i];
    Fb2a1d1e2g1[i] := if Nh2 == Nh1 then Fb2a1d1e2g1h1[i] else (Fb2a1d1e2g1h2[i] - Fb2a1d1e2g1h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb2a1d1e2g1h1[i];
    Fb2a1d1e2g2[i] := if Nh2 == Nh1 then Fb2a1d1e2g2h2[i] else (Fb2a1d1e2g2h2[i] - Fb2a1d1e2g2h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb2a1d1e2g2h1[i];
    Fb2a1d2e1g1[i] := if Nh2 == Nh1 then Fb2a1d2e1g1h1[i] else (Fb2a1d2e1g1h2[i] - Fb2a1d2e1g1h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb2a1d2e1g1h1[i];
    Fb2a1d2e1g2[i] := if Nh2 == Nh1 then Fb2a1d2e1g2h2[i] else (Fb2a1d2e1g2h2[i] - Fb2a1d2e1g2h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb2a1d2e1g2h1[i];
    Fb2a1d2e2g1[i] := if Nh2 == Nh1 then Fb2a1d2e2g1h1[i] else (Fb2a1d2e2g1h2[i] - Fb2a1d2e2g1h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb2a1d2e2g1h1[i];
    Fb2a1d2e2g2[i] := if Nh2 == Nh1 then Fb2a1d2e2g2h2[i] else (Fb2a1d2e2g2h2[i] - Fb2a1d2e2g2h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb2a1d2e2g2h1[i];
    Fb2a2d1e1g1[i] := if Nh2 == Nh1 then Fb2a2d1e1g1h1[i] else (Fb2a2d1e1g1h2[i] - Fb2a2d1e1g1h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb2a2d1e1g1h1[i];
    Fb2a2d1e1g2[i] := if Nh2 == Nh1 then Fb2a2d1e1g2h2[i] else (Fb2a2d1e1g2h2[i] - Fb2a2d1e1g2h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb2a2d1e1g2h1[i];
    Fb2a2d1e2g1[i] := if Nh2 == Nh1 then Fb2a2d1e2g1h1[i] else (Fb2a2d1e2g1h2[i] - Fb2a2d1e2g1h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb2a2d1e2g1h1[i];
    Fb2a2d1e2g2[i] := if Nh2 == Nh1 then Fb2a2d1e2g2h2[i] else (Fb2a2d1e2g2h2[i] - Fb2a2d1e2g2h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb2a2d1e2g2h1[i];
    Fb2a2d2e1g1[i] := if Nh2 == Nh1 then Fb2a2d2e1g1h1[i] else (Fb2a2d2e1g1h2[i] - Fb2a2d2e1g1h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb2a2d2e1g1h1[i];
    Fb2a2d2e1g2[i] := if Nh2 == Nh1 then Fb2a2d2e1g2h2[i] else (Fb2a2d2e1g2h2[i] - Fb2a2d2e1g2h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb2a2d2e1g2h1[i];
    Fb2a2d2e2g1[i] := if Nh2 == Nh1 then Fb2a2d2e2g1h1[i] else (Fb2a2d2e2g1h2[i] - Fb2a2d2e2g1h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb2a2d2e2g1h1[i];
    Fb2a2d2e2g2[i] := if Nh2 == Nh1 then Fb2a2d2e2g2h2[i] else (Fb2a2d2e2g2h2[i] - Fb2a2d2e2g2h1[i]) * (H - table_H[Nh1]) / (table_H[Nh2] - table_H[Nh1]) + Fb2a2d2e2g2h1[i];
    //计算Fbade
    Fb1a1d1e1[i] := if Ng2 == Ng1 then Fb1a1d1e1g1[i] else (Fb1a1d1e1g2[i] - Fb1a1d1e1g1[i]) * (G - table_G[Ng1]) / (table_G[Ng2] - table_G[Ng1]) + Fb1a1d1e1g1[i];
    Fb1a1d1e2[i] := if Ng2 == Ng1 then Fb1a1d1e2g2[i] else (Fb1a1d1e2g2[i] - Fb1a1d1e2g1[i]) * (G - table_G[Ng1]) / (table_G[Ng2] - table_G[Ng1]) + Fb1a1d1e2g1[i];
    Fb1a1d2e1[i] := if Ng2 == Ng1 then Fb1a1d2e1g1[i] else (Fb1a1d2e1g2[i] - Fb1a1d2e1g1[i]) * (G - table_G[Ng1]) / (table_G[Ng2] - table_G[Ng1]) + Fb1a1d2e1g1[i];
    Fb1a1d2e2[i] := if Ng2 == Ng1 then Fb1a1d2e2g2[i] else (Fb1a1d2e2g2[i] - Fb1a1d2e2g1[i]) * (G - table_G[Ng1]) / (table_G[Ng2] - table_G[Ng1]) + Fb1a1d2e2g1[i];
    Fb1a2d1e1[i] := if Ng2 == Ng1 then Fb1a2d1e1g1[i] else (Fb1a2d1e1g2[i] - Fb1a2d1e1g1[i]) * (G - table_G[Ng1]) / (table_G[Ng2] - table_G[Ng1]) + Fb1a2d1e1g1[i];
    Fb1a2d1e2[i] := if Ng2 == Ng1 then Fb1a2d1e2g2[i] else (Fb1a2d1e2g2[i] - Fb1a2d1e2g1[i]) * (G - table_G[Ng1]) / (table_G[Ng2] - table_G[Ng1]) + Fb1a2d1e2g1[i];
    Fb1a2d2e1[i] := if Ng2 == Ng1 then Fb1a2d2e1g1[i] else (Fb1a2d2e1g2[i] - Fb1a2d2e1g1[i]) * (G - table_G[Ng1]) / (table_G[Ng2] - table_G[Ng1]) + Fb1a2d2e1g1[i];
    Fb1a2d2e2[i] := if Ng2 == Ng1 then Fb1a2d2e2g2[i] else (Fb1a2d2e2g2[i] - Fb1a2d2e2g1[i]) * (G - table_G[Ng1]) / (table_G[Ng2] - table_G[Ng1]) + Fb1a2d2e2g1[i];
    //
    Fb2a1d1e1[i] := if Ng2 == Ng1 then Fb2a1d1e1g1[i] else (Fb2a1d1e1g2[i] - Fb2a1d1e1g1[i]) * (G - table_G[Ng1]) / (table_G[Ng2] - table_G[Ng1]) + Fb2a1d1e1g1[i];
    Fb2a1d1e2[i] := if Ng2 == Ng1 then Fb2a1d1e2g2[i] else (Fb2a1d1e2g2[i] - Fb2a1d1e2g1[i]) * (G - table_G[Ng1]) / (table_G[Ng2] - table_G[Ng1]) + Fb2a1d1e2g1[i];
    Fb2a1d2e1[i] := if Ng2 == Ng1 then Fb2a1d2e1g1[i] else (Fb2a1d2e1g2[i] - Fb2a1d2e1g1[i]) * (G - table_G[Ng1]) / (table_G[Ng2] - table_G[Ng1]) + Fb2a1d2e1g1[i];
    Fb2a1d2e2[i] := if Ng2 == Ng1 then Fb2a1d2e2g2[i] else (Fb2a1d2e2g2[i] - Fb2a1d2e2g1[i]) * (G - table_G[Ng1]) / (table_G[Ng2] - table_G[Ng1]) + Fb2a1d2e2g1[i];
    Fb2a2d1e1[i] := if Ng2 == Ng1 then Fb2a2d1e1g1[i] else (Fb2a2d1e1g2[i] - Fb2a2d1e1g1[i]) * (G - table_G[Ng1]) / (table_G[Ng2] - table_G[Ng1]) + Fb2a2d1e1g1[i];
    Fb2a2d1e2[i] := if Ng2 == Ng1 then Fb2a2d1e2g2[i] else (Fb2a2d1e2g2[i] - Fb2a2d1e2g1[i]) * (G - table_G[Ng1]) / (table_G[Ng2] - table_G[Ng1]) + Fb2a2d1e2g1[i];
    Fb2a2d2e1[i] := if Ng2 == Ng1 then Fb2a2d2e1g1[i] else (Fb2a2d2e1g2[i] - Fb2a2d2e1g1[i]) * (G - table_G[Ng1]) / (table_G[Ng2] - table_G[Ng1]) + Fb2a2d2e1g1[i];
    Fb2a2d2e2[i] := if Ng2 == Ng1 then Fb2a2d2e2g2[i] else (Fb2a2d2e2g2[i] - Fb2a2d2e2g1[i]) * (G - table_G[Ng1]) / (table_G[Ng2] - table_G[Ng1]) + Fb2a2d2e2g1[i];
    //计算Fbad
    Fb1a1d1[i] := if Ne2 == Ne1 then Fb1a1d1e1[i] else (Fb1a1d1e2[i] - Fb1a1d1e1[i]) * (E - table_E[Ne1]) / (table_E[Ne2] - table_E[Ne1]) + Fb1a1d1e1[i];
    Fb1a1d2[i] := if Ne2 == Ne1 then Fb1a1d2e1[i] else (Fb1a1d2e2[i] - Fb1a1d2e1[i]) * (E - table_E[Ne1]) / (table_E[Ne2] - table_E[Ne1]) + Fb1a1d2e1[i];
    Fb1a2d1[i] := if Ne2 == Ne1 then Fb1a2d1e1[i] else (Fb1a2d1e2[i] - Fb1a2d1e1[i]) * (E - table_E[Ne1]) / (table_E[Ne2] - table_E[Ne1]) + Fb1a2d1e1[i];
    Fb1a2d2[i] := if Ne2 == Ne1 then Fb1a2d2e1[i] else (Fb1a2d2e2[i] - Fb1a2d2e1[i]) * (E - table_E[Ne1]) / (table_E[Ne2] - table_E[Ne1]) + Fb1a2d2e1[i];
    Fb2a1d1[i] := if Ne2 == Ne1 then Fb2a1d1e1[i] else (Fb2a1d1e2[i] - Fb2a1d1e1[i]) * (E - table_E[Ne1]) / (table_E[Ne2] - table_E[Ne1]) + Fb2a1d1e1[i];
    Fb2a1d2[i] := if Ne2 == Ne1 then Fb2a1d2e1[i] else (Fb2a1d2e2[i] - Fb2a1d2e1[i]) * (E - table_E[Ne1]) / (table_E[Ne2] - table_E[Ne1]) + Fb2a1d2e1[i];
    Fb2a2d1[i] := if Ne2 == Ne1 then Fb2a2d1e1[i] else (Fb2a2d1e2[i] - Fb2a2d1e1[i]) * (E - table_E[Ne1]) / (table_E[Ne2] - table_E[Ne1]) + Fb2a2d1e1[i];
    Fb2a2d2[i] := if Ne2 == Ne1 then Fb2a2d2e1[i] else (Fb2a2d2e2[i] - Fb2a2d2e1[i]) * (E - table_E[Ne1]) / (table_E[Ne2] - table_E[Ne1]) + Fb2a2d2e1[i];
    //计算Fba
    Fb1a1[i] := if Nd2 == Nd1 then Fb1a1d1[i] else (Fb1a1d2[i] - Fb1a1d1[i]) * (D - table_D[Nd1]) / (table_D[Nd2] - table_D[Nd1]) + Fb1a1d1[i];
    Fb1a2[i] := if Nd2 == Nd1 then Fb1a2d1[i] else (Fb1a2d2[i] - Fb1a2d1[i]) * (D - table_D[Nd1]) / (table_D[Nd2] - table_D[Nd1]) + Fb1a2d1[i];
    Fb2a1[i] := if Nd2 == Nd1 then Fb2a1d1[i] else (Fb2a1d2[i] - Fb2a1d1[i]) * (D - table_D[Nd1]) / (table_D[Nd2] - table_D[Nd1]) + Fb2a1d1[i];
    Fb2a2[i] := if Nd2 == Nd1 then Fb2a2d1[i] else (Fb2a2d2[i] - Fb2a2d1[i]) * (D - table_D[Nd1]) / (table_D[Nd2] - table_D[Nd1]) + Fb2a2d1[i];
    //计算Fb
    Fb1[i] := if Na2 == Na1 then Fb1a1[i] else (Fb1a2[i] - Fb1a1[i]) * (A - table_A[Na1]) / (table_A[Na2] - table_A[Na1]) + Fb1a1[i];
    Fb2[i] := if Na2 == Na1 then Fb2a1[i] else (Fb2a2[i] - Fb2a1[i]) * (A - table_A[Na1]) / (table_A[Na2] - table_A[Na1]) + Fb2a1[i];
    //计算F
    F[i] := if Nb2 == Nb1 then Fb1[i] else (Fb2[i] - Fb1[i]) * (B - table_B[Nb1]) / (table_B[Nb2] - table_B[Nb1]) + Fb1[i];
  end for;
  y := F;
  annotation (
    Icon(coordinateSystem(extent = {{-100.0, -100.0}, {100.0, 100.0}}, 
      grid = {2.0, 2.0})), 
    Diagram(coordinateSystem(preserveAspectRatio = true, 
      extent = {{-100, -100}, {100, 100}})));
end C_BADEGHJFunR;